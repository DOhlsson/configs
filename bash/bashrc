#
# ~/.bashrc
#

# If not running interactively, don't do anything
case $- in
  *i*) ;;
  *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# unlimited bash history
HISTSIZE=
HISTFILESIZE=

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Prompt colors and special ansi codes
RED="\[\033[91m\]"
GREEN="\[\033[92m\]"
YELLOW="\[\033[93m\]"
BLUE="\[\033[94m\]"
PURPLE="\[\033[95m\]"
CYAN="\[\033[96m\]"
GRAY="\[\033[37m\]"

BELL="\[\a\]"
RESET="\[\033[0m\]"
BOLD="\[\033[1m\]"

returnvalue() {
  ret=$?
  if [ $ret -ne 0 ]; then
    echo "[$ret] "
  fi
}

if [ -n "$SSH_CLIENT" ]; then
  HOSTCOLOR=$PURPLE
else
  HOSTCOLOR=$GREEN
fi

PS1="$BELL$BOLD$RED\$(returnvalue)$RESET$CYAN\# $HOSTCOLOR\u@\h $BLUE\W$YELLOW\$(__git_ps1) $GRAY\$ $RESET"

export TERM=xterm-256color

# More colors for ls
eval "`dircolors`"

# Aliases
alias ls='ls -Fv --color=auto'
alias l='ls -hla --time-style=long-iso'
alias rm='rm -iv'
alias cp='cp -iv'
alias mv='mv -iv'
alias grep='grep --color=auto'
alias less='less -RiXFW -z-4'
alias mkdir='mkdir -pv'
alias i3lock='i3lock -c 000000'
alias cal='ncal -Mw'
alias ..='cd ..'
alias grepr='grep -rIin --exclude-dir=node_modules/ --exclude-dir=bower_components/'
alias dps='docker ps --format "table {{.Names}}\t{{.ID}}\t{{.Image}}\t{{.RunningFor}}\t{{.Status}}"'
alias dpsa='dps -a'
alias wdpsa='watch "docker ps -a --format \"table {{.Names}}\t{{.ID}}\t{{.Image}}\t{{.RunningFor}}\t{{.Status}}\""'
alias fd='fdfind'

# Aliases for xclip
alias xco='xclip -out -selection clipboard'
alias xci='xclip -in -selection clipboard'
alias xcpo='xclip -out'
alias xcpi='xclip -in'
alias shrug='curl -sS shrug.io | tee >(tr -d "\n" | xclip -in -selection clipboard)'

# Scripts
if [ -d "$HOME/scripts" ]; then
  for script in $(/bin/ls "$HOME/scripts"); do
    . "$HOME/scripts/$script"
  done
fi

# Work scripts
if [ -d "$HOME/work/scripts" ]; then
  for script in $(/bin/ls "$HOME/work/scripts"); do
    . "$HOME/work/scripts/$script"
  done
fi

# Shell variables
export EDITOR=nvim

# Ansible
export ANSIBLE_NOCOWS=1

# fzf use fd file finder
export FZF_DEFAULT_COMMAND='fdfind --type f'

export NODE_PATH=/usr/lib/node_modules:/home/do/node_modules/lib/node_modules

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Kubernetes bash completion
which kubectl >/dev/null && source <(kubectl completion bash)
#which minikube >/dev/null && source <(minikube completion bash)
which helm >/dev/null && source <(helm completion bash)

# If this is an xterm/screen set the title to user@host:dir
case "$TERM" in
  xterm*|screen*)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD}\007"'
    ;;
  *)
    ;;
esac

# fzf, because it's awesome, install it with apt
[[ $- = *i* ]] && [[ -f /usr/share/doc/fzf/examples/key-bindings.bash ]] && source /usr/share/doc/fzf/examples/key-bindings.bash

# BEGIN ANSIBLE MANAGED BLOCK
export KUBECONFIG=$HOME/.kube/config:/home/do/work/dev-ops/kubeconfigs/kube_config_kna.yml:/home/do/work/dev-ops/kubeconfigs/kube_config_sto.yml:$KUBECONFIG
# END ANSIBLE MANAGED BLOCK
